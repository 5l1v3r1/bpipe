=========== Changes for Bpipe Version 0.9.8_beta_5 ============

-   more fixes to make config{} work properly
    fixed 'config' not working / failing to execute
    commands
-   fix parallel branches created from file pattern split
    not using split files as basis for outputs sometimes

=========== Changes for Bpipe Version 0.9.8_beta_4 ============

-   support for multiple split characters in input matching patterns

-   support for config closure to enable config across multiple commands or
    when using "multi"

-   slightly better messaging when skipping command due to existence, not
    based on time stamp

-   fix display of output to stderr when version probe command fails
    - send to log instead

-   experimental chaining of from and filter / transform

-   fix "from" causing original inputs not to be queried for files in some
    situations

-   fix "filter" nested in "from" failing to infer correct output when output 
    based on input other than input in "from" clause

-   fix possible exception when using $output.prefix

-   fixed second and later stages in nested parallel segments not always
    resolving correct inputs

-   fix attempts to use "split" in input variables failing (regression)

-   added support for use of "region" variable without genome or chr splitting
    to allow generic pipeline stages that can work with or without regions 
    specified
    
-   added command line option ("-L") to specify default value of region variable
    
-   fixed "from" to match multiple inputs if used in form from("*.txt") etc.

-   Added example for how to run paired end reads

-   fix output extension causing wrong / confusing behavior when incombination
    with a filter and unexpected input order

-   fix bpipe command leaving out eclipse folder from classpath

=========== Changes for Bpipe Version 0.9.8_beta_3 ============

-   Updated underlying groovy implementation to Groovy 2.1

-   Add "pre-existing" label to display of outputs that 
    weren't genereated by the current run

-   fix error when creating File objects from input /
    output

-   support for using numbered outputs with file extensions
    (eg: $output2.txt)

-   fixed outputs sometimes being recreated unnecessarily
    when multiple commands inside transform/filter

-   support for implicit 'thread' variable for auto
    allocating threads based on known concurrency

-   fixed duplicate output files for $output1,
    $output2,... if pipeline has no input files

-   fix jobs not always cleaned up from global job table

-   support for referencing a particular input with a
    particular extension using "$input<n>.<ext>"

-   fixed double period appearing in some file names when
    using filter

-   fixed order of output from "glob" depending on the
    vagaries of the file system or java internals by
    sorting it

-   made 'from' conform to the convention of multiple
    inputs of same time bumping to next actual input
    instead of returning the same over and over

=========== Changes for Bpipe Version 0.9.8_beta_2 ============

-   fixed multi not failing pipeline when an asynchronous
    command fails

-   making filter() conform to the same behavior as
    transform(): when a filter type is repeated, it moves
    to the next input (see google group discussion -
    https://groups.google.com/forum/?fromgroups=#!topic/bpipe-discuss/G58ExlG2Vgo

-   fixed error when reporting notification failures
    to user

-   fixed output extensions not working correctly with
    filter when multiple filters supplied

-   fix multi not actually parallelizing properly in
    some cases

-   fix regression in 'from' not accepting list (added
    test)

-   fixed from with multiple arguments ignoring first
    argument

-   fixed deadlock condition in using "multi" in certain
    cases

=========== Changes for Bpipe Version 0.9.8_beta_1 ============

-   More flexible model for concurrency management, enabling
    management of any kind of resource. Introduction of
    new keyword "uses" to declare resource usage for a block
    and command line options (-m, -l, -n) to control different
    aspects of concurrency

-   Complete re-implementation of dependency analysis so that
    Bpipe understands the depedency graph and can perform
    transitive dependency analysis to allow rerunning piplines
    without rebuilding unnecessary intermediate dependencies.
    (See Issue #2, http://code.google.com/p/bpipe/issues/detail?id=2)
    Includes support for new command line commands, 
    "bpipe query", "bpipe cleanup", and "bpipe preserve" to 
    display and manage dependencies, as well as annotations,
    "@preserved" to declare dependencies that should not be
    deleted in a "cleanup". 

-   support for new 'glob' function available within
    pipeline stages to facilitate pipelines that need to
    use wild card matches on input files.

-   Annotations can be used with lower case now. Upper case 
    still works, but some people feel @transform, @filter,
    etc. looks nicer.

-   Support for parallelizing by chromosome on existing
    files already split by chromosome. If your input files
    are split and named by chromosome, you can use 
    filterInputs parameter to make the existing
    files be used for inputs to the parallelization 
    eg. chr(1..2, filterInputs:true) 

-   Many various bug fixes and improvements to messaging,
    behaviour and output.


